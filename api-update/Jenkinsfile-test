library("tdr-jenkinslib")

def versionTag = "v${env.BUILD_NUMBER}"
def repo = "tdr-backend-checks"

pipeline {
    agent {
        label "master"
    }
    parameters {
        choice(name: "STAGE", choices: ["intg", "staging", "prod"], description: "The stage you are building the front end for")
    }
    stages {
        stage("Build") {
            agent {
                ecs {
                    inheritFrom "transfer-frontend"
                }
            }
            steps {
                script {
                    tdr.reportStartOfBuildToGitHub(repo)
                }
                dir("api-update") {
                    sh "sbt test antivirus/assembly"
                    sh "mv antivirus/target/scala-2.13/antivirus-assembly-*.jar antivirus/target/scala-2.13/antivirus-api-update.jar"
                    stash includes: "antivirus/target/scala-2.13/antivirus-api-update.jar", name: "antivirus-api-update-jar"
                }
            }
        }
        stage('Post-build') {
            agent {
                ecs {
                    inheritFrom "aws"
                    taskrole "arn:aws:iam::${env.MANAGEMENT_ACCOUNT}:role/TDRJenkinsNodeLambdaRole${params.STAGE.capitalize()}"
                }
            }

            when {
                expression { env.BRANCH_NAME == "master"}
            }

            stages {
                stage('Deploy to integration') {
                    steps {
                        script {
                            unstash "antivirus-api-update-jar"
                            sh "cp antivirus/target/scala-2.13/antivirus-api-update.jar /"
                            def accountNumber = tdr.getAccountNumberFromStage(params.STAGE)
                            // sh "python /upload_to_s3.py ${accountNumber} ${params.STAGE} tdr-backend-code-mgmt ${versionTag}/antivirus-api-update.jar /antivirus-api-update.jar"
                            sh "aws s3 cp /antivirus-api-update.jar s3://tdr-backend-code-mgmt/${versionTag}/antivirus-api-update.jar"

                            sh 'git config --global user.email tna-digital-archiving-jenkins@nationalarchives.gov.uk'
                            sh 'git config --global user.name tna-digital-archiving-jenkins'
                            sh "git tag ${versionTag}"
                            sshagent(['github-jenkins']) {
                                sh("git push origin ${versionTag}")
                            }
                            build(
                                    job: "TDR Backend Checks Deploy",
                                    parameters: [
                                            string(name: "STAGE", value: "intg"),
                                            string(name: "TO_DEPLOY", value: versionTag)
                                    ],
                                    wait: false)
                        }
                    }
                }
            }
        }
    }
    post {
        failure {
            node('master') {
                script {
                    tdr.reportFailedBuildToGitHub(repo)
                }
            }
        }
        success {
          node('master') {
                script {
                    tdr.reportSuccessfulBuildToGitHub(repo)
                }
          }
        }
    }
}
