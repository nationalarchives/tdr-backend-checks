pipeline {
    agent {
        label "master"
    }
    parameters {
        choice(name: "STAGE", choices: ["intg", "staging", "prod"], description: "The stage you are building the front end for")
        string(name: "TO_DEPLOY", description: "The git tag, branch or commit reference to deploy, e.g. 'v123'")
    }
    stages {
        stage("Deploy lambda") {
            agent {
                ecs {
                    inheritFrom "aws"
                    taskrole "arn:aws:iam::${env.MANAGEMENT_ACCOUNT}:role/TDRJenkinsNodeLambdaRole${params.STAGE.capitalize()}"
                }
            }
            steps {
                script {
                    def accountNumber = getAccountNumberFromStage()
                    VERSION_TAG = sh (
                        script: "python3 /deploy_lambda_from_s3.py ${accountNumber} ${params.STAGE} tdr-api-update-antivirus-${params.STAGE} tdr-backend-checks-${params.STAGE} antivirus.jar",
                        returnStdout: true
                    ).trim()
                    sh 'git config --global user.email tna-digital-archiving-jenkins@nationalarchives.gov.uk'
                    sh 'git config --global user.name tna-digital-archiving-jenkins'
                    sh "git tag ${VERSION_TAG}"
                    sshagent(['github-jenkins']) {
                        sh("git push origin ${VERSION_TAG}")
                    }
                }
            }
        }
    }
}

def getAccountNumberFromStage() {
    def stageToAccountMap = [
            "intg": env.INTG_ACCOUNT,
            "staging": env.STAGING_ACCOUNT,
            "prod": env.PROD_ACCOUNT
    ]

    return stageToAccountMap.get(params.STAGE)
}
